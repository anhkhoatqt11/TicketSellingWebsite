generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  email             String   @unique
  phoneNumber       String?
  password          String
  diaChi            String?
  role              String?  @default("user")
  avatar            String?  @default("https://i0.wp.com/www.repol.copl.ulaval.ca/wp-content/uploads/2019/01/default-user-icon.jpg?ssl=1")
  isEmailVerified   Boolean  @default(false)
  createdAt         DateTime @default(now())
  loaiHinhKinhDoanh Int?
  hoTenOrganizer    String?
  cccdNumber        String?
  maSoThueCaNhan    String?
  anhDaiDienToChuc  String?  @default("https://i0.wp.com/www.repol.copl.ulaval.ca/wp-content/uploads/2019/01/default-user-icon.jpg?ssl=1")
  tenDoanhNghiep    String?
  maSoDKKD          String?
  noiCap            String?
  ngayCap           String?
  chiNhanh          String?
  soTaiKhoan        String?
  tenChuTaiKhoan    String?
  tenNganHang       String?
  trangThai         String?  @default("dang_hoat_dong")
  otp               String?
  SuKiens           SuKien[] @relation("UserToSuKien")
  HoaDon            HoaDon[] @relation("UserToHoaDon")
}

model SuKien {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  moTa          String?
  diaChi        String?
  hinhAnhSuKien String?
  ngayBatDau    DateTime
  ngayKetThuc   DateTime
  userId        String      @db.ObjectId
  ChuDeId       String      @db.ObjectId
  trangThai     String      @default("Đã duyệt")
  user          User        @relation(fields: [userId], references: [id], name: "UserToSuKien")
  ChuDe         ChuDe       @relation(fields: [ChuDeId], references: [id])
  ves           Ve[]
  MaGiamGia     MaGiamGia[]
  Banners       Banners[]
  HoaDon        HoaDon[]    @relation("SuKienToHoaDon")
}

model ChuDe {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  SuKiens   SuKien[]
}

model Ve {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  moTa            String?
  gia             Float
  mau             String
  soLuong         Int
  soLuongToiThieu Int
  soLuongToiDa    Int
  ngayBan         DateTime
  ngayKetThuc     DateTime
  SuKienId        String      @db.ObjectId
  suKien          SuKien      @relation(fields: [SuKienId], references: [id])
  HoaDonVe        HoaDonVe[]
  MaGiamGia       MaGiamGia[]
}

model HoaDon {
  id                  String     @id @default(auto()) @map("_id") @db.ObjectId
  ngayDatHang         DateTime
  userId              String     @db.ObjectId
  phuongThucThanhToan String
  createdAt           DateTime   @default(now())
  tinhTrang           String     @default("Chưa thanh toán")
  tongTien            Float      @default(0)
  maGiamGiaId         String?
  checkIn             Boolean    @default(false)
  suKienId            String     @db.ObjectId
  maDatCho            String
  suKien              SuKien     @relation(fields: [suKienId], references: [id], name: "SuKienToHoaDon")
  user                User       @relation(fields: [userId], references: [id], name: "UserToHoaDon")
  HoaDonVe            HoaDonVe[]
}

model HoaDonVe {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  hoaDonId String @db.ObjectId
  veId     String @db.ObjectId
  soLuong  Int
  tongGia  Float
  hoaDon   HoaDon @relation(fields: [hoaDonId], references: [id])
  ve       Ve     @relation(fields: [veId], references: [id])
}

model MaGiamGia {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  maGiamGia    String   @unique
  soTienGiam   Float?
  phanTramGiam Int?
  ngayBatDau   DateTime
  ngayKetThuc  DateTime
  SuKienId     String?  @db.ObjectId
  VeId         String?  @db.ObjectId
  trangThai    Boolean  @default(true)
  suKien       SuKien?  @relation(fields: [SuKienId], references: [id])
  ve           Ve?      @relation(fields: [VeId], references: [id])
}

model Banners {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  SuKienId String @db.ObjectId
  position Int?
  suKien   SuKien @relation(fields: [SuKienId], references: [id])
}
